<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>
        <import type="android.view.View"/>
        <variable
            name="viewModel"
            type="com.sudoajay.dnswidget.ui.dnsTest.DnsTestViewModel" />

    </data>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".ui.dnsTest.DnsTestFragment">


        <ImageView
            android:id="@+id/imageView"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:src="@drawable/connected_world"
            android:visibility="@{viewModel.getShow() == `Button` ? View.VISIBLE :View.GONE }"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.888"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_bias="0.37" />

        <Button
            android:id="@+id/normal_Changes_Button"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="16dp"
            android:layout_marginTop="264dp"
            android:visibility="@{viewModel.getShow() == `Button` ? View.VISIBLE :View.GONE }"
            android:layout_marginEnd="16dp"
            android:background="@drawable/background_button_effect"
            android:fontFamily="@font/lato"
            android:paddingTop="12dp"
            android:paddingBottom="12dp"
            android:onClick="@{() -> viewModel.runThread()}"
            android:text="@string/begin_dns_speed_test_text"
            android:textAllCaps="false"
            android:textColor="#f3f4f7"
            android:textSize="22sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="1.0"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="@+id/imageView" />


        <androidx.swiperefreshlayout.widget.SwipeRefreshLayout
            android:id="@+id/swipe_refresh"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:layout_behavior="@string/appbar_scrolling_view_behavior"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toStartOf="parent"
            android:visibility="@{viewModel.getShow() == `recyclerList` ? View.VISIBLE :View.GONE }"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_bias="0.0">

            <androidx.recyclerview.widget.RecyclerView
                android:id="@+id/recycler_view"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:scrollbars="vertical" />
        </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>

        <ProgressBar
            android:id="@+id/progress_circular"
            android:layout_width="@dimen/progress_circular_dimension"
            android:layout_height="@dimen/progress_circular_dimension"
            android:layout_gravity="center"
            android:indeterminate="true"
            android:visibility="@{viewModel.getShow() == `Progress` ? View.VISIBLE :View.GONE }"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.5"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>